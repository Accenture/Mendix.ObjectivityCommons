// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package objectivitycommons.actions;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Having example input List: [{Key:"id", Value:"1"}, {Key:"name", Value:"name1"}]
 * and Separator = ", "
 * and Template = "{Key}: {Value}"
 * result is: "id: 1, name: name1"
 */
public class StringJoinByTemplate extends CustomJavaAction<java.lang.String>
{
	private java.util.List<IMendixObject> List;
	private java.lang.String Separator;
	private java.lang.String Template;

	public StringJoinByTemplate(IContext context, java.util.List<IMendixObject> List, java.lang.String Separator, java.lang.String Template)
	{
		super(context);
		this.List = List;
		this.Separator = Separator;
		this.Template = Template;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		String sep = Optional.ofNullable(this.Separator).orElse("");
		String tmpl = Optional.ofNullable(this.Template).orElse("").trim();
		if (tmpl.isEmpty()) throw new MendixRuntimeException("Attribute cannot be empty");

		IContext ctx = this.getContext();
		List<String> parts = this.List.stream().map((obj) -> {
			var res = tmpl;
			// iterate over all (primitive) attributes (of each object in in put list)
			var attrs = obj.getPrimitives(ctx);
			for (var attr : attrs) {
				var attrName = attr.getName();
				Object val = obj.getValue(ctx, attrName);
				String valStr = (val == null) ? null : val.toString();
				// parse the input template: replace "{attrName}" by attrib value
				var attrPlaceholder = "{" + attrName + "}";
				if (res.contains(attrPlaceholder)) {
					res = res.replaceAll("\\Q" + attrPlaceholder + "\\E", valStr);
				}
			}
			return res;
		}).collect(Collectors.toList());
		return String.join(sep, parts);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StringJoinByTemplate";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
