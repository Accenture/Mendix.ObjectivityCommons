// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package objectivitycommons.actions;

import objectivitycommons.proxies.StringValue;
import java.util.ArrayList;
import java.util.List;
import com.mendix.core.CoreException;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.opencsv.CSVReader;
import csv.impl.CSV;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * An alternative for ReadNextLine from CSV module.
 * This one is more dynamic:
 * doesn't require declaring a result entity with columns mapped as attributes.
 * 
 * Reads a next line from a CSV - and returns a List of StringDTO.
 * This action should only be invoked from the microflow used by a ImportCSV action.
 * If the action returns an empty list, the end of the file is reached.
 */
public class CSV_ReadNextLine_ToStringList extends CustomJavaAction<java.util.List<IMendixObject>>
{
	public CSV_ReadNextLine_ToStringList(IContext context)
	{
		super(context);
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		IContext ctx = this.getContext();

		ILogNode logger = CSV.getLogger();
		Object contextObj = ctx.getData().get(CSV.CONTEXT_READER_OBJ);
		if (contextObj == null || !(contextObj instanceof CSVReader)) {
			throw new CoreException("Reader not found, this action should be invoked from a Import CSV microflow.");
		}
		
		@SuppressWarnings("resource") // reader is closed by the ImportCSV action
		CSVReader reader = (CSVReader) contextObj;
		
		String line[] = reader.readNext();
		if (line == null) {
			logger.debug("End of file has been reached.");
			return null;
		}
		
		List<IMendixObject> result = new ArrayList<IMendixObject>();
		int idx = 0;
		for (String val : line) {
			StringValue dto = new StringValue(ctx);
			dto.setValue(val);
			dto.setIndex(idx++);
			result.add(dto.getMendixObject());
		}
		
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "CSV_ReadNextLine_ToStringList";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
