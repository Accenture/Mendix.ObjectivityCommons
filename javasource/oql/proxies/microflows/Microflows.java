// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package oql.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the OQL module
	public static void aCT_ExecuteOQL(IContext context, oql.proxies.Query _query)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Query", _query == null ? null : _query.getMendixObject());
		Core.microflowCall("OQL.ACT_ExecuteOQL").withParams(params).execute(context);
	}
	public static java.util.List<oql.proxies.ExamplePersonResult> dS_ExampleOQL_DataSet(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("OQL.DS_ExampleOQL_DataSet").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> oql.proxies.ExamplePersonResult.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static java.util.List<oql.proxies.ExamplePersonResult> dS_ExampleOQL_Statement(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("OQL.DS_ExampleOQL_Statement").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> oql.proxies.ExamplePersonResult.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static oql.proxies.Query dS_GetQuery(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("OQL.DS_GetQuery").withParams(params).execute(context);
		return result == null ? null : oql.proxies.Query.initialize(context, result);
	}
	public static void iVK_CreateContent(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("OQL.IVK_CreateContent").withParams(params).execute(context);
	}
	public static void iVK_PerformTests(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("OQL.IVK_PerformTests").withParams(params).execute(context);
	}
	public static void iVK_TestCount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("OQL.IVK_TestCount").withParams(params).execute(context);
	}
}
