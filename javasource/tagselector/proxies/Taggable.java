// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package tagselector.proxies;

public class Taggable
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject taggableMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TagSelector.Taggable";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Taggable_Tag("TagSelector.Taggable_Tag");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Taggable(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TagSelector.Taggable"));
	}

	protected Taggable(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject taggableMendixObject)
	{
		if (taggableMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TagSelector.Taggable", taggableMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TagSelector.Taggable");

		this.taggableMendixObject = taggableMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Taggable.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static tagselector.proxies.Taggable initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return tagselector.proxies.Taggable.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static tagselector.proxies.Taggable initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("_Test.Base", mendixObject.getType()))
			return _test.proxies.Base.initialize(context, mendixObject);

		return new tagselector.proxies.Taggable(context, mendixObject);
	}

	public static tagselector.proxies.Taggable load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return tagselector.proxies.Taggable.initialize(context, mendixObject);
	}

	public static java.util.List<? extends tagselector.proxies.Taggable> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<tagselector.proxies.Taggable> result = new java.util.ArrayList<tagselector.proxies.Taggable>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TagSelector.Taggable" + xpathConstraint))
			result.add(tagselector.proxies.Taggable.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Taggable_Tag
	 */
	public final java.util.List<tagselector.proxies.Tag> getTaggable_Tag() throws com.mendix.core.CoreException
	{
		return getTaggable_Tag(getContext());
	}

	/**
	 * @param context
	 * @return value of Taggable_Tag
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<tagselector.proxies.Tag> getTaggable_Tag(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<tagselector.proxies.Tag> result = new java.util.ArrayList<tagselector.proxies.Tag>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Taggable_Tag.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(tagselector.proxies.Tag.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Taggable_Tag
	 * @param taggable_tag
	 */
	public final void setTaggable_Tag(java.util.List<tagselector.proxies.Tag> taggable_tag)
	{
		setTaggable_Tag(getContext(), taggable_tag);
	}

	/**
	 * Set value of Taggable_Tag
	 * @param context
	 * @param taggable_tag
	 */
	public final void setTaggable_Tag(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<tagselector.proxies.Tag> taggable_tag)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (tagselector.proxies.Tag proxyObject : taggable_tag)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Taggable_Tag.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return taggableMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final tagselector.proxies.Taggable that = (tagselector.proxies.Taggable) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TagSelector.Taggable";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
