// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Returns a sublist of a given list. Elements from start index (offset) to the end index (amount + offset) are taken.
 * 
 * If offset is not given, then default value is assumed - 0.
 * If the end index exceeds the bounds of the list, then all remaining elements are returned.
 * 
 * Example:
 * Input: 
 *      list: [3,6,2,5,7], offset: 1, amount: 3
 * Output: 
 *       [6,2,5]
 * @param {MxObject[]} list
 * @param {Big} offset
 * @param {Big} amount
 * @returns {Promise.<MxObject[]>}
 */
export async function ListTake_JS(list, offset, amount) {
	// BEGIN USER CODE
		var fromIndex = offset == null ? 0 : offset.toNumber();
		var toIndex = amount == null ? fromIndex : fromIndex + amount.toNumber();
		
		let listLength = list ? list.length : 0;
		
		if (toIndex > listLength) toIndex = listLength;
		if (fromIndex > toIndex) fromIndex = toIndex;
		
		return list ? list.slice(fromIndex, toIndex) : list;
	// END USER CODE
}
