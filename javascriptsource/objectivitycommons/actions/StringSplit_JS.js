// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * See:
 * CommunityCommons: StringSplit
 * JamCommons: StringSplit
 * Java: String.split
 * JavaScript: String.split
 * 
 * The splitting result is returned as list of StringValue objects.
 * @param {string} string - Input string to split
 * @param {string} separator - Regex
 * @returns {Promise.<MxObject[]>}
 */
export async function StringSplit_JS(string, separator) {
	// BEGIN USER CODE
	let str = string || '';
	let sep = separator || '';
	let parts = str.split(new RegExp(sep));
	let entities = parts.map((part, index) => mxCreate(part, index));
	return Promise.all(entities);

	function mxCreate(val, idx) {
        return new Promise(function (resolve, reject) {
            mx.data.create({
                entity: 'ObjectivityCommons.ValueVM', // TODO: avoid hard-coding the name???
                callback: function(mxObj) {
					mxObj.set('String', val);
					mxObj.set('Integer', idx);
					resolve(mxObj);
                },
				error: function(error) { reject(error.message); }
            });
        });
    }
	// END USER CODE
}
